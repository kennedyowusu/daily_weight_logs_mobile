// Mocks generated by Mockito 5.4.4 from annotations
// in daily_weight_logs_mobile/test/features/onboarding/application/onboarding_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:daily_weight_logs_mobile/common/utils/secure_storage.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DailyWeightLogsSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockDailyWeightLogsSecureStorage extends _i1.Mock
    implements _i2.DailyWeightLogsSecureStorage {
  MockDailyWeightLogsSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #getAccessToken,
            [],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> storeAccessToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #storeAccessToken,
          [token],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccessToken,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isUserSeenOnboarding() => (super.noSuchMethod(
        Invocation.method(
          #isUserSeenOnboarding,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> setIsUserSeenOnboarding(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setIsUserSeenOnboarding,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
